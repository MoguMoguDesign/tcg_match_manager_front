// Mocks generated by Mockito 5.4.6 from annotations
// in domain/test/src/account/login_use_case_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i6;
import 'package:repository/src/account/account_dto.dart' as _i5;
import 'package:repository/src/account/account_repository.dart' as _i2;
import 'package:repository/src/repository_result.dart' as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [AccountRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockAccountRepository extends _i1.Mock implements _i2.AccountRepository {
  @override
  _i3.Future<_i4.RepositoryResult<_i5.AccountDto>> login({
    required String? baseUrl,
    required String? username,
    required String? password,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#login, [], {
              #baseUrl: baseUrl,
              #username: username,
              #password: password,
            }),
            returnValue: _i3.Future<_i4.RepositoryResult<_i5.AccountDto>>.value(
              _i6.dummyValue<_i4.RepositoryResult<_i5.AccountDto>>(
                this,
                Invocation.method(#login, [], {
                  #baseUrl: baseUrl,
                  #username: username,
                  #password: password,
                }),
              ),
            ),
            returnValueForMissingStub:
                _i3.Future<_i4.RepositoryResult<_i5.AccountDto>>.value(
                  _i6.dummyValue<_i4.RepositoryResult<_i5.AccountDto>>(
                    this,
                    Invocation.method(#login, [], {
                      #baseUrl: baseUrl,
                      #username: username,
                      #password: password,
                    }),
                  ),
                ),
          )
          as _i3.Future<_i4.RepositoryResult<_i5.AccountDto>>);
}
