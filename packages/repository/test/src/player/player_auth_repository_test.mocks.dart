// Mocks generated by Mockito 5.4.6 from annotations
// in repository/test/src/player/player_auth_repository_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i4;
import 'package:system/src/http/_export.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [HttpClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockHttpClient extends _i1.Mock implements _i2.HttpClient {
  @override
  _i3.Future<_i2.HttpResponse> getUri(Uri? uri) =>
      (super.noSuchMethod(
            Invocation.method(#getUri, [uri]),
            returnValue: _i3.Future<_i2.HttpResponse>.value(
              _i4.dummyValue<_i2.HttpResponse>(
                this,
                Invocation.method(#getUri, [uri]),
              ),
            ),
            returnValueForMissingStub: _i3.Future<_i2.HttpResponse>.value(
              _i4.dummyValue<_i2.HttpResponse>(
                this,
                Invocation.method(#getUri, [uri]),
              ),
            ),
          )
          as _i3.Future<_i2.HttpResponse>);

  @override
  _i3.Future<_i2.HttpResponse> postUri(Uri? uri, Map<String, dynamic>? data) =>
      (super.noSuchMethod(
            Invocation.method(#postUri, [uri, data]),
            returnValue: _i3.Future<_i2.HttpResponse>.value(
              _i4.dummyValue<_i2.HttpResponse>(
                this,
                Invocation.method(#postUri, [uri, data]),
              ),
            ),
            returnValueForMissingStub: _i3.Future<_i2.HttpResponse>.value(
              _i4.dummyValue<_i2.HttpResponse>(
                this,
                Invocation.method(#postUri, [uri, data]),
              ),
            ),
          )
          as _i3.Future<_i2.HttpResponse>);
}
